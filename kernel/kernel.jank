#include "serial.jank";
#include "vga.jank";
#include "pma.jank";

void check_paging_enabled() {
    u64 cr0;
    asm!("mov %cr0, %rax");
    asm!("mov %rax, -8(%rbp)");
    if(cr0 & ($u64 1 << $u64 31)) serial_print("paging enabled\n");
    else serial_print("paging disabled\n");
}   

void mem_touch(u64 low, u64 high) {
    serial_print("TOUCHING \n");
    u8* mem = $u8* $u64 0;
    for(u64 i = low; i < high; i++){
        mem[i];
    }
    serial_print("done touching\n");
}

i32 main() {
    u64 tlow  = 0x0000000100000000;
    u64 thigh = 0x0000000100001000;
    // mem_touch(tlow, thigh);

    check_paging_enabled();

    init_pma();
    init_serial();

    for(i32 i = 0; i < 100; i++){
        for(i32 j = 0; j < 100; j++){
            draw_pixel(i + 700, j + 500, COLOR_WHITE);    //0x00FFFFFF
        }
    }

    u8* testString = "BELLOOOOO ANDREW LI 0123456789!@#$%^&*()[]{};:";
    draw_string(0, 0, testString);
    serial_print(testString);

    u64 charCnt = $u64 0;
    u64 lineCnt = $u64 0;
    psf_header* font = $psf_header* @_binary_font_psf_start;

    while(1) {
        u8 c = read_serial();

        write_serial(c);
        write_serial('\n');

        draw_char($i32 charCnt, $i32 lineCnt, c);
        
        charCnt += $u64 font->width;
        if(charCnt >= FB_WIDTH) {
            lineCnt += $u64 font->height;
            charCnt = $u64 0;
        }
    }
    
    return 0;
}
